@model Rauf_Gaming.Models.Product

@{
    ViewBag.Title = "Game";
}

@using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)

    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add New Game</h4>
                <p class="card-description">

                </p>
                <form class="forms-sample">
                    <div class="form-group">
                        <label for="exampleInputName1">Title</label>
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Rating</label>
                        @Html.DropDownList("Rating", new List<SelectListItem>
                        {
                           new SelectListItem{ Text="1 Star", Value = "1" },
                           new SelectListItem{ Text="2 Stars", Value = "2" },
                           new SelectListItem{ Text="3 Stars", Value = "3" },
                           new SelectListItem{ Text="4 Stars", Value = "4" },
                           new SelectListItem{ Text="5 Stars", Value = "5" },
                        }, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Condition</label>
                        @Html.DropDownList("Condition", new List<SelectListItem>
                        {
                           new SelectListItem{ Text="New", Value = "New" },
                           new SelectListItem{ Text="Used", Value = "Used" },
                        }, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Description</label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 4, required = "required" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="exampleInputCity1">Actual Price</label>
                        @Html.TextBoxFor(model => model.ActualPrice, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.ActualPrice, "", new { @class = "text-danger" })
                    </div>
                  
                    <div class="form-group">
                        <label for="exampleTextarea1">Genre</label>
                        @Html.DropDownListFor(model => model.Genre, (List<SelectListItem>)ViewBag.Genres, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="exampleTextarea1">Publishers</label>
                        @Html.TextBoxFor(model => model.Publishers, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Publishers, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleTextarea1">Platform</label>
                        @Html.DropDownList("Platform", new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Ps4", Value = "Ps4" },
                           new SelectListItem{ Text="XBox", Value = "XBox" },
                           new SelectListItem{ Text="Nintendo", Value = "Nintendo" },

                        }, new { @class = "form-control" })
                    </div>
                    <input type="text" id="Type" name="Type" value="Game" style="display:none;" />
                    <button type="submit" class="btn btn-success mr-2">Submit</button>
                    <a href="/Admin/Index" class="btn btn-light">Cancel</a>
                </form>
            </div>
        </div>
    </div>

}
<script src="~/Scripts/App/Game/jsLoadGame.js"></script>



